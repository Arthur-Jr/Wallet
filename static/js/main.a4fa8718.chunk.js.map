{"version":3,"sources":["Image/new-logo.png","Image/Edit.png","Image/Delete.png","Image/gitHubIcon.svg","Image/linkedinIcon.svg","Image/notFound.gif","Redux/actions/index.js","components/Controled-Components/Button.jsx","components/Controled-Components/Inputs.jsx","api/registerLoginUser.js","pages/Login.js","components/Controled-Components/select.jsx","components/Form.jsx","components/HeaderForm.jsx","globalFuncs/CambioFunc.js","components/Header.jsx","components/DeleteEditButtons.jsx","components/MobileDetails.jsx","components/Table.jsx","components/Footer.jsx","pages/Wallet.js","components/NotFound.jsx","App.js","serviceWorker.js","Redux/reducers/CheckScreenType.js","Redux/reducers/EditExpense.js","Redux/reducers/Loading.js","Redux/reducers/user.js","Redux/reducers/wallet.js","Redux/reducers/index.js","Redux/store/index.js","index.js"],"names":["module","exports","edit","expense","type","fetchApi","dispatch","a","fetch","response","json","result","USDT","currencies","modifyExpenses","expenses","setScreenType","phoneStatus","setFormStatus","status","Button","this","props","text","handleClick","testId","className","onClick","disabled","data-testid","React","Component","defaultProps","Input","handleChange","name","labelText","value","maxL","htmlFor","id","onChange","placeholder","min","maxLength","registerLoginUser","body","isLogin","axios","post","jwtToken","console","log","Login","state","email","password","emailStatus","passwordStatus","handleEmail","bind","handlePassword","test","target","setState","validateEmail","length","login","history","username","push","prev","src","logo","alt","handlePageChange","connect","logged","Select","item","map","currency","key","DEFAULT_STATE","description","method","tag","PAGAMENTO","MOTIVO","Form","expenseToEdit","handleEditClick","addButton","handleMCancel","allCurrency","Object","keys","reduce","acc","addExpense","fetchCurrency","setForm","exchangeRates","getExchange","window","innerWidth","modifyExpense","editExpense","newExpenses","filter","expensesWithEdit","sort","b","boolEdit","mobileType","initials","wallet","checkScreen","infos","HeaderForm","loading","isFatching","getCambio","ask","Math","round","Header","mobileButton","formStatus","sumExpenses","toFixed","user","DeleteEditButtons","setDetails","find","expenseId","handleEdit","editIcon","handleDelete","deleteIcon","MobileDetails","Number","slice","indexOf","Table","selectedExpense","handleExpenseClick","tagName","mobileDetailsStatus","e","createTr","handleExit","Footer","url","open","openSocial","gitIcon","linkedinIcon","Wallet","checkSize","setScreen","to","NotFound","notFoundGif","useEffect","resizeListener","addEventListener","removeEventListener","path","component","exact","Boolean","location","hostname","match","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a4fa8718.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/new-logo.67b4b987.png\";","module.exports = __webpack_public_path__ + \"static/media/Edit.7ee6892c.png\";","module.exports = __webpack_public_path__ + \"static/media/Delete.41c8548e.png\";","module.exports = __webpack_public_path__ + \"static/media/gitHubIcon.f25d8a38.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedinIcon.65220039.svg\";","module.exports = __webpack_public_path__ + \"static/media/notFound.1ba131e9.gif\";","// Coloque aqui suas actions\r\nexport const LOGGED_INFO = 'LOGGED_INFO';\r\nexport const CURRENCY = 'CURRENCY';\r\nexport const LOADING = 'LOADING';\r\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\r\nexport const MODIFY_EXPENSE = 'MODIFY_EXPENSE';\r\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\r\nexport const SET_SCREEN = 'SET_SCREEN';\r\nexport const SET_FORM_STATUS = 'SET_FORM_STATUS';\r\nexport const SET_DETAILS_STATUS = 'SET_DETAILS_STATUS';\r\n\r\nexport const logged = (email) => ({ type: LOGGED_INFO, email });\r\n\r\nexport const edit = (expense) => ({ type: EDIT_EXPENSE, expense });\r\n\r\nconst loading = () => ({ type: LOADING });\r\n\r\nconst getCurrency = (currencies) => ({ type: CURRENCY, currencies });\r\n\r\nexport function fetchApi() {\r\n  return async (dispatch) => {\r\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\r\n    const result = await response.json();\r\n    delete result.USDT;\r\n    dispatch(getCurrency(result));\r\n    dispatch(loading());\r\n  };\r\n  // Pesquisei sobre o delete(linha 18), neste link:\r\n  // https://stackoverflow.com/questions/6295087/how-to-remove-item-from-a-javascript-object\r\n}\r\n\r\nexport const expense = (infos) => ({ type: ADD_EXPENSE, infos });\r\n\r\nexport const modifyExpenses = (expenses) => ({ type: MODIFY_EXPENSE, expenses });\r\n\r\nexport const setScreenType = (phoneStatus) => ({ type: SET_SCREEN, phoneStatus });\r\n\r\nexport const setFormStatus = (status) => ({ type: SET_FORM_STATUS, status });\r\n\r\nexport const setDetailsStatus = () => ({ type: SET_DETAILS_STATUS });\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    const { text, handleClick, status, testId, className } = this.props;\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        onClick={ handleClick }\r\n        disabled={ status }\r\n        data-testid={ testId }\r\n        className={ className }\r\n      >\r\n        { text }\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.defaultProps = {\r\n  status: false,\r\n  testId: '',\r\n  className: '',\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  status: PropTypes.bool,\r\n  testId: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Input extends React.Component {\r\n  render() {\r\n    const { type, handleChange, name, testId, text, labelText, value, maxL } = this.props;\r\n\r\n    return (\r\n      <label htmlFor={ name }>\r\n        { `${labelText} ` }\r\n        <input\r\n          name={ name }\r\n          id={ name }\r\n          type={ type }\r\n          data-testid={ testId }\r\n          onChange={ handleChange }\r\n          placeholder={ text }\r\n          value={ value }\r\n          min=\"0\"\r\n          maxLength={ maxL }\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nInput.defaultProps = {\r\n  labelText: '',\r\n  text: '',\r\n  testId: '',\r\n  value: '',\r\n  maxL: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  testId: PropTypes.string,\r\n  text: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  labelText: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  maxL: PropTypes.string,\r\n};\r\n\r\nexport default Input;\r\n","import axios from 'axios';\r\n\r\nconst URL = 'https://wallet-api-production-d865.up.railway.app';\r\n\r\nconst registerLoginUser = async (body, isLogin) => {\r\n  try {\r\n    const jwtToken = await axios.post(`${URL}/${isLogin ? 'user/login' : 'user'}`, body);\r\n    return jwtToken;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default registerLoginUser;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logged } from '../Redux/actions';\r\nimport Button from '../components/Controled-Components/Button';\r\nimport Input from '../components/Controled-Components/Inputs';\r\nimport registerLoginUser from '../api/registerLoginUser';\r\nimport '../Css/Login.css';\r\nimport logo from '../Image/new-logo.png';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      emailStatus: true,\r\n      passwordStatus: true,\r\n      isLogin: true,\r\n    };\r\n\r\n    this.handleEmail = this.handleEmail.bind(this);\r\n    this.handlePassword = this.handlePassword.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  validateEmail(email) {\r\n    if (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      return false;\r\n    }\r\n    return true;\r\n    // Referência sobre o regex para email, neste link:\r\n    // https://www.w3resource.com/javascript/form/email-validation.php\r\n  }\r\n\r\n  handleEmail({ target: { value } }) {\r\n    this.setState({\r\n      email: value,\r\n      emailStatus: this.validateEmail(value),\r\n    });\r\n  }\r\n\r\n  handlePassword({ target: { value } }) {\r\n    const PASSWORD_CONDITION = 6;\r\n    if (value.length >= PASSWORD_CONDITION) {\r\n      this.setState({ password: value, passwordStatus: false });\r\n    } else {\r\n      this.setState({ password: value, passwordStatus: true });\r\n    }\r\n  }\r\n\r\n  async handleClick() {\r\n    const { email, password, isLogin } = this.state;\r\n    const { login, history } = this.props;\r\n    login(email);\r\n    console.log(await registerLoginUser({ username: email, password }, isLogin));\r\n    history.push('/wallet/carteira');\r\n  }\r\n\r\n  handlePageChange() {\r\n    this.setState((prev) => ({ isLogin: !prev.isLogin }));\r\n  }\r\n\r\n  render() {\r\n    const { emailStatus, passwordStatus, email, isLogin } = this.state;\r\n    return (\r\n      <main className=\"login-main\">\r\n        <div className=\"logo-div\">\r\n          <img src={ logo } alt=\"Wallet icon\" />\r\n        </div>\r\n        <div className=\"form-div\">\r\n          <h1 data-testid=\"title\">{ isLogin ? 'Login' : 'Register' }</h1>\r\n          <form className=\"login-form\">\r\n            <Input\r\n              type=\"email\"\r\n              testId=\"email-input\"\r\n              text=\"Email\"\r\n              name=\"email\"\r\n              handleChange={ this.handleEmail }\r\n              value={ email }\r\n            />\r\n            <label htmlFor=\"password-input\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"password-input\"\r\n                data-testid=\"password-input\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                onChange={ this.handlePassword }\r\n              />\r\n            </label>\r\n            <Button\r\n              text={ isLogin ? 'Login' : 'Registrar' }\r\n              handleClick={ this.handleClick }\r\n              status={ emailStatus || passwordStatus }\r\n              className={ !emailStatus && !passwordStatus ? 'active' : '' }\r\n            />\r\n          </form>\r\n          <button\r\n            onClick={ () => this.handlePageChange() }\r\n            type=\"button\"\r\n            className=\"change-page-status-btn\"\r\n          >\r\n            { isLogin ? 'Registrar-se' : 'Login' }\r\n          </button>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  login: (email) => dispatch(logged(email)),\r\n});\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func,\r\n  }).isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Select extends React.Component {\r\n  render() {\r\n    const { name, item, text, handleChange, value } = this.props;\r\n    return (\r\n      <label htmlFor={ name }>\r\n        { `${text}` }\r\n        <select name={ name } id={ name } onChange={ handleChange } value={ value }>\r\n          { item.map((currency) => (\r\n            <option key={ currency } value={ currency }>{currency}</option>)) }\r\n        </select>\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nSelect.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  item: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { expense, fetchApi, edit, modifyExpenses, setFormStatus } from '../Redux/actions';\r\nimport Input from './Controled-Components/Inputs';\r\nimport Select from './Controled-Components/select';\r\nimport Button from './Controled-Components/Button';\r\n\r\nconst DEFAULT_STATE = {\r\n  value: '',\r\n  description: '',\r\n  currency: 'USD',\r\n  method: 'Dinheiro',\r\n  tag: 'Alimentação',\r\n};\r\nconst PAGAMENTO = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\r\nconst MOTIVO = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\r\nconst PHONE_WIDTH_PX = 650;\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { expenseToEdit: { value, description, currency, method, tag } } = props;\r\n\r\n    this.state = {\r\n      value,\r\n      description,\r\n      currency,\r\n      method,\r\n      tag,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleEditClick = this.handleEditClick.bind(this);\r\n    this.addButton = this.addButton.bind(this);\r\n    this.handleMCancel = this.handleMCancel.bind(this);\r\n  }\r\n\r\n  getExchange() {\r\n    const { allCurrency } = this.props;\r\n    const initials = Object.keys(allCurrency);\r\n\r\n    return initials.reduce((acc, currency) => {\r\n      acc[currency] = allCurrency[currency];\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\n  handleChange({ target: { name, value } }) {\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleClick() {\r\n    const { addExpense, fetchCurrency, expenses, setForm } = this.props;\r\n    fetchCurrency();\r\n    const exchangeRates = this.getExchange();\r\n    const infos = { id: expenses.length, ...this.state, exchangeRates };\r\n    addExpense(infos);\r\n    this.setState({ ...DEFAULT_STATE });\r\n\r\n    if (window.innerWidth < PHONE_WIDTH_PX) {\r\n      setForm(false);\r\n    }\r\n  }\r\n\r\n  handleEditClick() {\r\n    const {\r\n      expenseToEdit: { id, exchangeRates },\r\n      expenses,\r\n      modifyExpense,\r\n      editExpense,\r\n      setForm } = this.props;\r\n    const newExpenses = expenses.filter((item) => item.id !== id);\r\n    const expensesWithEdit = [{ id, ...this.state, exchangeRates }, ...newExpenses];\r\n    expensesWithEdit.sort((a, b) => a.id - b.id);\r\n    modifyExpense(expensesWithEdit);\r\n    editExpense();\r\n\r\n    if (window.innerWidth < PHONE_WIDTH_PX) {\r\n      setForm(false);\r\n    }\r\n  }\r\n\r\n  handleMCancel() {\r\n    const { setForm, edit: boolEdit, editExpense } = this.props;\r\n    setForm(false);\r\n    return boolEdit && editExpense();\r\n  }\r\n\r\n  addButton(text) {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <Button\r\n        text={ `${text} despesa` }\r\n        handleClick={ text === 'Editar' ? this.handleEditClick : this.handleClick }\r\n        status={ value.length === 0 }\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { value, description, currency, method, tag } = this.state;\r\n    const { allCurrency, edit: boolEdit, editExpense, mobileType } = this.props;\r\n    const initials = Object.keys(allCurrency);\r\n\r\n    return (\r\n      <>\r\n        <Input\r\n          labelText=\"Valor\"\r\n          type=\"number\"\r\n          name=\"value\"\r\n          handleChange={ this.handleChange }\r\n          value={ value }\r\n        />\r\n        <Input\r\n          labelText=\"Descrição\"\r\n          type=\"text\"\r\n          name=\"description\"\r\n          handleChange={ this.handleChange }\r\n          value={ description }\r\n          maxL=\"13\"\r\n        />\r\n        <Select\r\n          text=\"Moeda\"\r\n          name=\"currency\"\r\n          item={ initials }\r\n          handleChange={ this.handleChange }\r\n          value={ currency }\r\n        />\r\n        <Select\r\n          text=\"Método\"\r\n          name=\"method\"\r\n          item={ PAGAMENTO }\r\n          handleChange={ this.handleChange }\r\n          value={ method }\r\n        />\r\n        <Select\r\n          text=\"Tag\"\r\n          name=\"tag\"\r\n          item={ MOTIVO }\r\n          handleChange={ this.handleChange }\r\n          value={ tag }\r\n        />\r\n        { !boolEdit ? this.addButton('Adicionar') : this.addButton('Editar') }\r\n        { mobileType && <Button text=\"Cancelar\" handleClick={ this.handleMCancel } /> }\r\n        { boolEdit && !mobileType\r\n          && <Button text=\"Cancelar\" handleClick={ () => editExpense() } /> }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allCurrency: state.wallet.currencies[0],\r\n  expenses: state.wallet.expenses,\r\n  edit: state.editExpense.edit,\r\n  mobileType: state.checkScreen.mobileType,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addExpense: (infos) => dispatch(expense(infos)),\r\n  fetchCurrency: () => dispatch(fetchApi()),\r\n  modifyExpense: (expenses) => dispatch(modifyExpenses(expenses)),\r\n  editExpense: (item) => dispatch(edit(item)),\r\n  setForm: (status) => dispatch(setFormStatus(status)),\r\n});\r\n\r\nForm.defaultProps = {\r\n  allCurrency: {},\r\n  expenseToEdit: { ...DEFAULT_STATE },\r\n};\r\n\r\nForm.propTypes = {\r\n  allCurrency: PropTypes.objectOf(PropTypes.object),\r\n  addExpense: PropTypes.func.isRequired,\r\n  fetchCurrency: PropTypes.func.isRequired,\r\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  expenseToEdit: PropTypes.shape({\r\n    value: PropTypes.string,\r\n    description: PropTypes.string,\r\n    currency: PropTypes.string,\r\n    method: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    id: PropTypes.number,\r\n    exchangeRates: PropTypes.objectOf(PropTypes.object),\r\n  }),\r\n  edit: PropTypes.bool.isRequired,\r\n  modifyExpense: PropTypes.func.isRequired,\r\n  editExpense: PropTypes.func.isRequired,\r\n  setForm: PropTypes.func.isRequired,\r\n  mobileType: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Form from './Form';\r\nimport '../Css/Header.css';\r\n\r\nclass HeaderForm extends React.Component {\r\n  render() {\r\n    const { loading, edit, expenseToEdit } = this.props;\r\n    return (\r\n      <form className={ edit ? 'edit-form' : 'add-form' }>\r\n        { !loading && !edit && <Form /> }\r\n        { !loading && edit && <Form expenseToEdit={ expenseToEdit } /> }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.loading.isFatching,\r\n  edit: state.editExpense.edit,\r\n  expenseToEdit: state.editExpense.expense,\r\n});\r\n\r\nHeaderForm.defaultProps = {\r\n  expenseToEdit: {},\r\n};\r\n\r\nHeaderForm.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  edit: PropTypes.bool.isRequired,\r\n  expenseToEdit: PropTypes.objectOf(PropTypes.any),\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(HeaderForm);\r\n","export default function getCambio(value, ask) {\r\n  const roundValue = Math.round((value * ask) * 100) / 100;\r\n  return roundValue;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport HeaderForm from './HeaderForm';\r\nimport getCambio from '../globalFuncs/CambioFunc';\r\nimport Button from './Controled-Components/Button';\r\nimport '../Css/Header.css';\r\nimport { setFormStatus } from '../Redux/actions';\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const { setForm } = this.props;\r\n    setForm(true);\r\n  }\r\n\r\n  sumExpenses() {\r\n    const { expenses } = this.props;\r\n\r\n    return expenses.reduce((acc, { currency, value, exchangeRates }) => {\r\n      const { ask } = exchangeRates[currency];\r\n      acc += getCambio(value, ask);\r\n      return acc;\r\n    }, 0);\r\n  }\r\n\r\n  render() {\r\n    const { email, mobileButton, formStatus } = this.props;\r\n\r\n    return (\r\n      <header className=\"header-main\">\r\n        <section className=\"main-section\">\r\n          <h1>MyWallet</h1>\r\n          <div>\r\n            <span data-testid=\"email-field\">{ email }</span>\r\n            <span\r\n              data-testid=\"total-field\"\r\n            >\r\n              { `${this.sumExpenses().toFixed(2)} BRL` }\r\n            </span>\r\n          </div>\r\n        </section>\r\n\r\n        <section\r\n          data-testid=\"form-section\"\r\n          className={ formStatus ? 'form-section' : 'hidden-form' }\r\n        >\r\n          <HeaderForm />\r\n        </section>\r\n\r\n        {mobileButton\r\n        && <Button\r\n          text=\"Adicionar nova despesa\"\r\n          className=\"mobile-button\"\r\n          handleClick={ this.handleClick }\r\n        />}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setForm: (status) => dispatch(setFormStatus(status)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: state.user.email,\r\n  expenses: state.wallet.expenses,\r\n  mobileButton: state.checkScreen.mobileType,\r\n  formStatus: state.checkScreen.formStatus,\r\n});\r\n\r\nHeader.propTypes = {\r\n  email: PropTypes.string.isRequired,\r\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  mobileButton: PropTypes.bool.isRequired,\r\n  formStatus: PropTypes.bool.isRequired,\r\n  setForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport editIcon from '../Image/Edit.png';\r\nimport deleteIcon from '../Image/Delete.png';\r\nimport { modifyExpenses,\r\n  edit, setDetailsStatus, setFormStatus } from '../Redux/actions/index';\r\n\r\nconst PHONE_WIDTH_PX = 650;\r\n\r\nclass DeleteEditButtons extends React.Component {\r\n  handleEdit(id) {\r\n    const { expenses, editExpense, setDetails, setForm } = this.props;\r\n    const newEdit = expenses.find((expense) => (\r\n      expense.id === id\r\n    ));\r\n    editExpense(newEdit);\r\n\r\n    if (window.innerWidth < PHONE_WIDTH_PX) {\r\n      setDetails();\r\n      setForm(true);\r\n    }\r\n  }\r\n\r\n  handleDelete(id) {\r\n    const { expenses, modifyExpense, setDetails } = this.props;\r\n    const newExpenses = expenses.filter((expense) => (\r\n      expense.id !== id\r\n    ));\r\n    modifyExpense(newExpenses);\r\n\r\n    if (window.innerWidth < PHONE_WIDTH_PX) {\r\n      setDetails();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { expenseId } = this.props;\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"button\"\r\n          data-testid=\"edit-btn\"\r\n          onClick={ () => this.handleEdit(expenseId) }\r\n          className=\"edit-btn\"\r\n        >\r\n          <img src={ editIcon } alt=\"Edit Icon\" />\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          data-testid=\"delete-btn\"\r\n          onClick={ () => this.handleDelete(expenseId) }\r\n          className=\"delete-btn\"\r\n        >\r\n          <img src={ deleteIcon } alt=\"delete Icon\" />\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  expenses: state.wallet.expenses,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  modifyExpense: (expenses) => dispatch(modifyExpenses(expenses)),\r\n  editExpense: (expense) => dispatch(edit(expense)),\r\n  setDetails: () => dispatch(setDetailsStatus()),\r\n  setForm: (status) => dispatch(setFormStatus(status)),\r\n});\r\n\r\nDeleteEditButtons.propTypes = {\r\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  modifyExpense: PropTypes.func.isRequired,\r\n  editExpense: PropTypes.func.isRequired,\r\n  expenseId: PropTypes.number.isRequired,\r\n  setDetails: PropTypes.func.isRequired,\r\n  setForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteEditButtons);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport getCambio from '../globalFuncs/CambioFunc';\r\nimport DeleteEditButtons from './DeleteEditButtons';\r\nimport '../Css/MobileDetails.css';\r\nimport { setDetailsStatus } from '../Redux/actions';\r\n\r\nclass MobileDetails extends React.Component {\r\n  render() {\r\n    const { expense: { description, tag, method, value, currency, exchangeRates, id },\r\n      setDetails } = this.props;\r\n    const { ask, name } = exchangeRates[currency];\r\n    const selectedCurrency = 'Real';\r\n\r\n    return (\r\n      <main className=\"Mobile-details\">\r\n        <button type=\"button\" onClick={ setDetails }>X</button>\r\n        <div className=\"details-main\">\r\n          <section className=\"details-section\">\r\n            <h5>Descrição:</h5>\r\n            <h4 id=\"description\">{ description }</h4>\r\n            <h5>Tag:</h5>\r\n            <h4 id=\"tag\">{ tag }</h4>\r\n            <h5>Método de pagamento:</h5>\r\n            <h4 id=\"method\">{ method }</h4>\r\n            <h5>Valor:</h5>\r\n            <h4 id=\"value\">{ Number(value).toFixed(2) }</h4>\r\n          </section>\r\n\r\n          <section className=\"details-section\">\r\n            <h5>Moeda:</h5>\r\n            <h4 id=\"name\">{ name.slice(0, name.indexOf('/')) }</h4>\r\n            <h5>Câmbio utilizado:</h5>\r\n            <h4 id=\"ask\">{ Number(ask).toFixed(2) }</h4>\r\n            <h5>Moeda de conversão:</h5>\r\n            <h4 id=\"real\">{ selectedCurrency }</h4>\r\n            <h5>Valor convertido:</h5>\r\n            <h4 id=\"currency\">{ getCambio(value, ask).toFixed(2) }</h4>\r\n          </section>\r\n        </div>\r\n        <section className=\"button-section\">\r\n          <DeleteEditButtons expenseId={ id } />\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setDetails: () => dispatch(setDetailsStatus()),\r\n});\r\n\r\nMobileDetails.propTypes = {\r\n  expense: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    description: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    method: PropTypes.string,\r\n    value: PropTypes.string,\r\n    currency: PropTypes.string,\r\n    exchangeRates: PropTypes.objectOf(PropTypes.any),\r\n  }).isRequired,\r\n  setDetails: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(MobileDetails);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport getCambio from '../globalFuncs/CambioFunc';\r\nimport '../Css/Table.css';\r\nimport MobileDetails from './MobileDetails';\r\nimport DeleteEditButtons from './DeleteEditButtons';\r\nimport { setDetailsStatus } from '../Redux/actions';\r\n\r\nclass Table extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      selectedExpense: {},\r\n    };\r\n\r\n    this.handleExpenseClick = this.handleExpenseClick.bind(this);\r\n  }\r\n\r\n  handleExpenseClick(expense, { target }) {\r\n    const { setDetails } = this.props;\r\n    const PHONE_WIDTH_PX = 900;\r\n    if (window.innerWidth < PHONE_WIDTH_PX\r\n      && (target.tagName === 'TD' || target.tagName === 'TR')) {\r\n      setDetails();\r\n      this.setState({ selectedExpense: expense });\r\n    }\r\n  }\r\n\r\n  createTr(expense) {\r\n    const { description, tag, method, value, currency, exchangeRates, id } = expense;\r\n    const { ask, name } = exchangeRates[currency];\r\n\r\n    return (\r\n      <>\r\n        <td>{ description }</td>\r\n        <td>{ tag }</td>\r\n        <td>{ method }</td>\r\n        <td>{ Number(value).toFixed(2) }</td>\r\n        <td>{ name.slice(0, name.indexOf('/')) }</td>\r\n        <td>{ Number(ask).toFixed(2) }</td>\r\n        <td>{ getCambio(value, ask).toFixed(2) }</td>\r\n        <td>Real</td>\r\n        <td>\r\n          <DeleteEditButtons expenseId={ id } />\r\n        </td>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { expenses, mobileDetailsStatus } = this.props;\r\n    const { selectedExpense } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <table className=\"table-main\">\r\n          <thead className=\"thead-main\">\r\n            <tr>\r\n              <th>Descrição</th>\r\n              <th>Tag</th>\r\n              <th>Método de pagamento</th>\r\n              <th>Valor</th>\r\n              <th>Moeda</th>\r\n              <th>Câmbio utilizado</th>\r\n              <th>Valor convertido</th>\r\n              <th>Moeda de conversão</th>\r\n              <th>Editar/Excluir</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"tbody-main\">\r\n            { expenses.map((expense) => (\r\n              <tr\r\n                key={ expense.id }\r\n                onClick={ (e) => this.handleExpenseClick(expense, e) }\r\n              >\r\n                {this.createTr(expense)}\r\n              </tr>\r\n            )) }\r\n          </tbody>\r\n        </table>\r\n        { mobileDetailsStatus\r\n        && <MobileDetails\r\n          expense={ selectedExpense }\r\n          handleExit={ this.handleExpenseClick }\r\n        /> }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  expenses: state.wallet.expenses,\r\n  mobileDetailsStatus: state.checkScreen.mobileDetailsStatus,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setDetails: () => dispatch(setDetailsStatus()),\r\n});\r\n\r\nTable.propTypes = {\r\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setDetails: PropTypes.func.isRequired,\r\n  mobileDetailsStatus: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\r\n","import React from 'react';\r\nimport gitIcon from '../Image/gitHubIcon.svg';\r\nimport linkedinIcon from '../Image/linkedinIcon.svg';\r\n\r\nclass Footer extends React.Component {\r\n  openSocial(url) {\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer className=\"main-footer\" data-testid=\"footer\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={ () => this.openSocial('https://github.com/Arthur-Jr') }\r\n          data-testid=\"social-icon\"\r\n        >\r\n          <img src={ gitIcon } alt=\"github icon\" />\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={ () => this.openSocial('https://www.linkedin.com/in/arthur-jr/') }\r\n          data-testid=\"social-icon\"\r\n        >\r\n          <img src={ linkedinIcon } alt=\"linkedin icon\" />\r\n        </button>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { fetchApi, setFormStatus, setScreenType } from '../Redux/actions';\r\nimport Header from '../components/Header';\r\nimport Table from '../components/Table';\r\nimport '../Css/App.css';\r\nimport Footer from '../components/Footer';\r\n\r\nclass Wallet extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchCurrency } = this.props;\r\n    fetchCurrency();\r\n\r\n    this.checkSize();\r\n  }\r\n\r\n  checkSize() {\r\n    const { setScreen, setForm } = this.props;\r\n    const PHONE_WIDTH_PX = 650;\r\n    if (window.innerWidth < PHONE_WIDTH_PX) {\r\n      setScreen(true);\r\n      setForm(false);\r\n    } else {\r\n      setScreen(false);\r\n      setForm(true);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    if (user.length === 0) {\r\n      return <Redirect to=\"/wallet/notFound\" />;\r\n    }\r\n\r\n    return (\r\n      <main className=\"wallet-main\">\r\n        <section className=\"section-main\">\r\n          <Header />\r\n          <Table />\r\n        </section>\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCurrency: () => dispatch(fetchApi()),\r\n  setScreen: (phoneStatus) => dispatch(setScreenType(phoneStatus)),\r\n  setForm: (status) => dispatch(setFormStatus(status)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user.email,\r\n});\r\n\r\nWallet.propTypes = {\r\n  fetchCurrency: PropTypes.func.isRequired,\r\n  setScreen: PropTypes.func.isRequired,\r\n  setForm: PropTypes.func.isRequired,\r\n  user: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Css/notFound.css';\r\nimport notFoundGif from '../Image/notFound.gif';\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <main className=\"main-notFound\">\r\n        <section>\r\n          <img src={ notFoundGif } alt=\"Contando dinheiro\" />\r\n          <h1>404 - Página não encontrada</h1>\r\n        </section>\r\n        <Link to=\"/wallet/\">Retornar para login</Link>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setFormStatus, setScreenType } from './Redux/actions';\r\nimport Login from './pages/Login';\r\nimport Wallet from './pages/Wallet';\r\nimport NotFound from './components/NotFound';\r\nimport './Css/App.css';\r\n\r\nfunction App({ setScreen, setForm }) {\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      const PHONE_WIDTH_PX = 650;\r\n      if (window.innerWidth > PHONE_WIDTH_PX) {\r\n        setScreen(false);\r\n        setForm(true);\r\n      } else {\r\n        setScreen(true);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', resizeListener);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeListener);\r\n    };\r\n  }, [setScreen, setForm]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/wallet/carteira\" component={ Wallet } />\r\n      <Route exact path=\"/wallet/\" component={ Login } />\r\n      <Route path=\"/wallet/*\" component={ NotFound } />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setScreen: (phoneStatus) => dispatch(setScreenType(phoneStatus)),\r\n  setForm: (status) => dispatch(setFormStatus(status)),\r\n});\r\n\r\nApp.propTypes = {\r\n  setScreen: PropTypes.func.isRequired,\r\n  setForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { SET_DETAILS_STATUS, SET_FORM_STATUS, SET_SCREEN } from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  mobileType: true,\r\n  formStatus: false,\r\n  mobileDetailsStatus: false,\r\n};\r\n\r\nfunction checkScreen(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case SET_SCREEN:\r\n    return { ...state, mobileType: action.phoneStatus };\r\n  case SET_FORM_STATUS:\r\n    return { ...state, formStatus: action.status };\r\n  case SET_DETAILS_STATUS:\r\n    return { ...state, mobileDetailsStatus: !state.mobileDetailsStatus };\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default checkScreen;\r\n","import { EDIT_EXPENSE } from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  expense: {},\r\n  edit: false,\r\n};\r\n\r\nfunction editExpense(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case EDIT_EXPENSE:\r\n    return { edit: !state.edit, expense: action.expense };\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default editExpense;\r\n","import { LOADING } from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  isFatching: true,\r\n};\r\n\r\nfunction loading(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case LOADING:\r\n    return { isFatching: false };\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default loading;\r\n","import { LOGGED_INFO } from '../actions';\r\n\r\nconst INITIAL_STATE = { email: '' };\r\n\r\nfunction user(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case LOGGED_INFO:\r\n    return { email: action.email };\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default user;\r\n","import { ADD_EXPENSE, CURRENCY, MODIFY_EXPENSE } from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  currencies: [],\r\n  expenses: [],\r\n};\r\n\r\nfunction wallet(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case CURRENCY:\r\n    return { ...state, currencies: [action.currencies] };\r\n  case ADD_EXPENSE:\r\n    return { ...state, expenses: [...state.expenses, action.infos] };\r\n  case MODIFY_EXPENSE:\r\n    return { ...state, expenses: [...action.expenses] };\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default wallet;\r\n","import { combineReducers } from 'redux';\r\nimport checkScreen from './CheckScreenType';\r\nimport editExpense from './EditExpense';\r\n\r\nimport loading from './Loading';\r\nimport user from './user';\r\nimport wallet from './wallet';\r\n\r\nconst rootReducer = combineReducers({ user, wallet, loading, editExpense, checkScreen });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './Redux/store';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={ store }>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}